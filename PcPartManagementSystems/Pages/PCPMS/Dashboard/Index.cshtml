@page
@model PcPartManagementSystems.Pages.PCPMS.Dashboard.IndexModel

@{
    ViewData["Title"] = bl.menu.mnu.GetNamedta(bl.menu.mnu.Menu_Dashboard);
}

<section class="content">
    <div class="container-fluid">



        <!-- Info boxes -->
        <div class="row py-4">
            <!-- /.col -->
            <div class="col-sm-12 col-md-6 col-lg-4">
                <div class="mx-5">
                    <div class="info-box mb-3 mx-auto">
                        <span class="info-box-icon bg-gradient-dark text-white elevation-1">
                            <i class="fa-solid fa-microchip"></i>
                         </span>

                        <div class="info-box-content">
                            <span class="info-box-text">Munufacture</span>
                            <span id="info-box-number-Manu"></span>
                        </div>
                        <!-- /.info-box-content -->
                    </div>
                </div>
                
                <!-- /.info-box -->
            </div>
            <!-- /.col -->
        

            <div class="col-sm-12 col-md-6 col-lg-4">
                <div class="mx-5">
                    <div class="info-box mb-3 mx-auto">
                        <span class="info-box-icon bg-gradient-dark text-white elevation-1">
                            <i class="fas fa-shopping-cart"></i>
                        </span>

                        <div class="info-box-content">
                            <span class="info-box-text">Sales</span>
                            <span id="info-box-number-Sale"></span>
                        </div>
                        <!-- /.info-box-content -->
                    </div>
                    <!-- /.info-box -->
                </div>
            </div>
            <!-- /.col -->
            <div class="col-sm-12 col-md-6 col-lg-4">
                <div class="mx-5">
                    <div class="info-box mb-3 mx-auto">
                        <span class="info-box-icon bg-gradient-dark text-white elevation-1">
                            <i class="fas fa-users"></i>
                        </span>

                        <div class="info-box-content">
                            <span class="info-box-text">Customer</span>
                            <span id="info-box-number-Cus"></span>
                        </div>
                        <!-- /.info-box-content -->
                    </div>
                    <!-- /.info-box -->
                </div>
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
     
    </div><!--/. container-fluid -->
    <div class="container-fluid pb-3">
        <div class="row m-auto">
            <div class="col-10 m-auto">
                <canvas id="salesChart" width="400" height="200" class="border-1"></canvas>
            </div>

        </div>
       

    </div>

</section>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            GetDataInMoneyAjax('?handler=SumSale', '#info-box-number-Sale')

            GetDataInCountjax('?handler=CountCus', '#info-box-number-Cus')

            GetDataInCountjax('?handler=CountManu', '#info-box-number-Manu')



            function fetchData() {
                return $.ajax({
                    url: '?handler=DisplayData',
                    method: 'GET',
                    dataType: 'json'  // Specify that we expect JSON data
                });
            }

            function prepareChartData(data) {
                // Extract categories and total sales
                const categories = [...new Set(data.map(item => item.category))];
                const totalSalesPerCategory = categories.map(cat => {
                    return data
                        .filter(item => item.category === cat)
                        .reduce((sum, item) => sum + item.totalPrice, 0);
                });

                return {
                    labels: categories,
                    datasets: [{
                        label: 'Total Sales per Category',
                        data: totalSalesPerCategory,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(255, 205, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(201, 203, 207, 0.2)'
                        ],
                        borderColor: [
                            'rgb(255, 99, 132)',
                            'rgb(255, 159, 64)',
                            'rgb(255, 205, 86)',
                            'rgb(75, 192, 192)',
                            'rgb(54, 162, 235)',
                            'rgb(153, 102, 255)',
                            'rgb(201, 203, 207)'
                        ],
                        borderWidth: 1
                    }]
                };
            }

            function renderChart(chartData) {
                const ctx = document.getElementById('salesChart').getContext('2d');
                new Chart(ctx, {
                    type: 'bar',
                    data: chartData,
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            }

            fetchData().done(function (data) {
                const chartData = prepareChartData(data);
                renderChart(chartData);
            }).fail(function (jqXHR, textStatus, errorThrown) {
                console.error('Error fetching data:', textStatus, errorThrown);
            });
        })

    </script>



}
