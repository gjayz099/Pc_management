@page
@model PcPartManagementSystems.Pages.PCPMS.Buy.BuyModel
@{
    ViewData["Title"] = bl.menu.mnu.GetNamedta(bl.menu.mnu.Menu_Buy) + "-Buy";
}


@section Topbar {
    <div class="py-2 me-3">
        <a class="btn btn-secondary edit-btn" href="/PCPMS/Buy/index/" onclick="return BtnClick()">Back</a>
        <button type="submit" class="btn btn-secondary" form="SaveData" asp-page-handler="InsertBuyCustomer">Save</button>
        <button id="click" class="btn btn-secondary ">Add Buy</button>
    </div>
}

<div>
    <form method="post" id="SaveData">
        <section class="content pt-5">
            <div class="container-fluid m-auto row">
               
                <div class="col-12 m-auto justify-content-center card-body card">
                    <input hidden asp-for="dtTP.TotalPrice" id="totalPriceDisplayHide" />
                    <div class="text-end ml-5">Total Price: <span id="totalPriceDisplay" >0.00</span></div>

                    <div class="row">
                        <div class=" col-6">
                            <label>Firstname</label>
                            <input type="text" class="form-control" asp-for="dt.Firstname" placeholder="Firsname" autocomplete="off" />
                        </div>
                        <div class=" col-6">
                            <label>Lastname</label>
                            <input type="text" class="form-control" asp-for="dt.Lastname" placeholder="Lastname" autocomplete="off"  />
                        </div>

                    </div>

                    <table id="CustomerTable" class="table table-striped table-secondary display nowrap" style="width: 100%; padding: 0 5px 0 5px">

                    </table>
                </div>
            </div>
        </section>
    </form>
</div>





@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {



            var table = $('#CustomerTable').DataTable({
                data: [],
                paging: false,
                searching: false,
                lengthChange: false,
                info: false,
                ordering: false,
                columns: [
                    {
                        data: 'partsID',
                        render: function (data, type, row, meta) {
                            // Render label and select element for Parts name
                            return '<label for="dropdownManu_' + meta.row + '">Parts</label><br>' +
                                '<select id="dropdownManu_' + meta.row + '" class="form-control w-100 dropdownManu" name="dts[' + meta.row + '].PartsID"></select>';
                        }
                    },
                    {
                        data: 'unitPrice',
                        render: function (data, type, row, meta) {
                            // Render label and input element for Unit Price
                            return '<label for="UnitPrice_' + meta.row + '">Price:</label><br>' +
                                '<input type="text" id="UnitPrice_' + meta.row + '" class="form-control unitPrice" name="dts[' + meta.row + '].UnitPrice" value="' + data + '" readonly>';
                        }
                    },
                    {
                        data: 'quantitySold',
                        render: function (data, type, row, meta) {
                            // Render label and input element for Quantity Sold
                            return '<label for="QuantitySold_' + meta.row + '">Quantity Sold:</label><br>' +
                                '<input type="text" id="QuantitySold_' + meta.row + '" class="form-control quantitySold" name="dts[' + meta.row + '].QuantitySold" value="' + data + '" autocomplete="off" >';
                        }
                    },
                    {
                        data: 'totalPrice',
                        render: function (data, type, row, meta) {
                            // Render label and input element for Total Price
                            return '<label for="TotalPrice_' + meta.row + '">Total Price:</label><br>' +
                                '<input type="text" id="TotalPrice_' + meta.row + '" class="form-control totalPrice" name="dts[' + meta.row + '].TotalPrice" value="' + data + '" readonly>';
                        }
                    }
                ],
                language: {
                    emptyTable: "No item to buy" // Message to display when table is empty
                }
            });


            $('#click').click(function () {
                var newIndex = table.rows().count();
                var newRow = {
                    'partsID': '',
                    'unitPrice': '',
                    'quantitySold': '',
                    'totalPrice': ''
                };
                table.row.add(newRow).draw();

                var selector = '#dropdownManu_' + newIndex;
                var priceInput = '#UnitPrice_' + newIndex;
                var quantityInput = '#QuantitySold_' + newIndex;

                // Event handler to update totalPriceInput
                $(quantityInput).on('input', function () {
                    var unitPrice = parseFloat($(priceInput).val()) || 0;
                    var quantitySold = parseFloat($(quantityInput).val()) || 0;
                    var totalPrice = quantitySold * unitPrice;
                    $('#TotalPrice_' + newIndex).val(totalPrice.toFixed(2)); // Update total price input field

                    updateTotalPrice(); // Update total price display whenever quantity changes
                  
                });

            

                // Call function to populate select and set price
                setSelect2ID('/sel/?handler=AllManu', selector, null, priceInput);
            });




        });
    </script>
}


