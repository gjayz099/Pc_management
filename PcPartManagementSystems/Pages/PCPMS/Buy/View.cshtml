@page "{Id}"
@model PcPartManagementSystems.Pages.PCPMS.Buy.ViewModel
@{
    ViewData["Title"] = bl.menu.mnu.GetNamedta(bl.menu.mnu.Menu_Buy) + "-View";
}




@section Topbar {
    <div class="py-2 me-3">
        <a class="btn btn-secondary edit-btn" href="/PCPMS/Buy/index/"  onclick="return BtnClick()">Back</a>
    </div>
}


<section class="content pt-5">
    <div class="container-fluid m-auto row">
        <div class="col-12 m-auto justify-content-center card-body card">
            <table class="w-100 mb-5">
                <div class="mb-4">
                    <input asp-for="ctr.TotalPriceItem" value="@Model.ctr.TotalPriceItem.ToString("N2")" class="form-control border-0 text-end" readonly />
                </div>
                <tbody>
                    <tr class="row">
                        <td class="col-6 m-auto">
                            <label>Firstname</label>
                            <input asp-for="ctr.Firstname" class="form-control" readonly />
                        </td>
                        <td class="col-6 m-auto">
                            <label>Lastname</label>
                            <input asp-for="ctr.Lastname" class="form-control" readonly />
                        </td>
                    </tr>
            
                </tbody>
            </table>

            <table id="Customer_buy" class="table table-striped table-secondary display nowrap" style="width: 100%; padding: 0 5px 0 5px"></table>
        </div>
    </div>
</section>


@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#Customer_buy').DataTable({
                ajax: {
                    url: '?handler=DataDisplay',
                    dataSrc: '',


                },
                order: [[1, 'desc']],
                info: false,
                ordering: false,


                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching data:', textStatus, errorThrown);
                    Swal.fire({ icon: "error", title: errorThrown });
                },
                columns: [
                    {
                        title: "Product",
                        data: "manuName"
                    },
                    {
                        title: "Specification",
                        data: "itemName"
                    },
                    {
                        title: "Category",
                        data: "category"
                    },
                    {
                        title: "Price",
                        data: "totalPrice",
                        render: function (data, type, row) {
                            return formatCurrency(data)
                        },
                        type: 'money'
                    },
                    {
                        title: "Sold",
                        data: "itemSold",
                    },
                    {
                        title: "Total Price",
                        data: "totalPriceItem",
                        render: function (data, type, row) {
                            return formatCurrency(data)
                        },
                        type: 'money'
                    }


                ],
            


            });
        })
    </script>
}