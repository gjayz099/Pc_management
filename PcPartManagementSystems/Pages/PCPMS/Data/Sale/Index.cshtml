@page
@model PcPartManagementSystems.Pages.PCPMS.Data.Sale.IndexModel

@{
    ViewData["Title"] = bl.menu.mnu.Menu_Name_Sale;
}

<section class="content pt-5">
    <div class="container-fluid m-auto row">
        <div class="col-12 m-auto justify-content-center card-body card">
            <table id="SalesTable" class="table table-striped table-secondary  display nowrap" style="width: 100%; padding: 0 5px 0 5px"></table>
        </div>
    </div>
</section>


@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            // DataTable initialization
            $('#SalesTable').DataTable({
                responsive: true,
                ajax: {
                    url: '?handler=DisplayData',
                    dataSrc: '',
                
                
                },
                order: [[1, 'desc']], // Sort by Category Name descending by default
                info: false, // Hide info text "Showing x of y entries"
                ordering: false, // Disable sorting initially
                paging: true, // Enable pagination
                searching: true, // Enable search functionality
                lengthMenu: [10, 25, 50, 75, 100], // Page length options
                pageLength: 7, // Default page length

                // Error handling
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching data:', textStatus, errorThrown);
                    Swal.fire({ icon: "error", title: errorThrown });
                },
                columns: [
                    {
                        title: 'Category',
                        data: 'category'
                    },
                    {
                        title: 'Manufature',
                        data: 'manufature'
                    },
                    {
                        title: 'Specification',
                        data: 'specification'
                    },
                    {
                        title: 'Sold',
                        data: 'quantitySold'
                    },
                    {
                        title: 'Price',
                        data: 'unitPrice',
                        render: function (data) {
                            return formatCurrency(data)
                        },
                        type: 'money'
                    },
                    {
                        title: 'TotalPrice',
                        data: 'totalPrice',
                        render: function (data) {
                            return formatCurrency(data)
                        },
                        type: 'money'
                    },
                    {
                        title: 'Customer',
                        data: 'customerFullname'
                    }
                ]
            });

        });

    </script>
}
